@startuml
!includeurl https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v19.0/dist/AWSCommon.puml
!includeurl https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v19.0/dist/ApplicationIntegration/EventBridgeScheduler.puml
!includeurl https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v19.0/dist/ApplicationIntegration/SimpleQueueService.puml
!includeurl https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v19.0/dist/ApplicationIntegration/SimpleNotificationService.puml
!includeurl https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v19.0/dist/Compute/Lambda.puml
!includeurl https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v19.0/dist/Database/DynamoDB.puml
!includeurl https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v19.0/dist/ManagementGovernance/CloudWatch.puml

!includeurl https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v19.0/dist/AWSSimplified.puml

package "Category Flow" {
  EventBridgeScheduler(schedule1, "Fetch Categories Schedule", "")
  Lambda(lambda1, "Fetch Categories Lambda", "")
  SimpleQueueService(sqs, "Category Queue", "")
  
  schedule1 -> lambda1 : triggers
  lambda1 -> sqs : enqueue categories
}

package "Product Flow" {
  EventBridgeScheduler(schedule2, "Fetch Products Schedule", "")
  Lambda(lambda2, "Fetch Products Lambda", "")
  DynamoDB(dynamodb, "Products Table", "")

  schedule2 -> lambda2 : triggers
  sqs --> lambda2 : dequeues category
  lambda2 -> dynamodb : store product
}
@enduml
